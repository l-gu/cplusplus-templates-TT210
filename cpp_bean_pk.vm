/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
$generator.generate($target.entityName ,  "${entity.name}Key.hpp", $target.folder, "hpp_bean_pk.vm"  )


${SHARP}include "${entity.name}Key.hpp"
using namespace std;


#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY ) )

/**
 * Composite primary key for entity "${entity.name}" ( stored in table "${entity.databaseTable}" )
 *
 * @author Telosys Tools Generator
 *
 */

class $entity.name
{
	public:
    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    ${entity.name}Key::${entity.name}Key()
	{
	}

    ${entity.name}Key::${entity.name}Key( $fn.argumentsListWithType($entity.keyAttributes) )
    {
#foreach( $field in $entity.keyAttributes )
        this->$field.name = $field.name ;
#end
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR KEY FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
 #if ( $field.setter )	void ${entity.name}Key::${field.setter}( $field.type.toLowerCase() value )
    {
        this->$field.name = value;
    }
 #end
 #if ( $field.getter )	${entity.name}Key::$field.type.toLowerCase() ${field.getter}()
    {
        return this->$field.name;
    }
 #end
#end  

};
