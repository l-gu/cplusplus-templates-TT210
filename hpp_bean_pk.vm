/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */

${SHARP}include <iostream>
using namespace std;


#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY ) )

/**
 * Composite primary key for entity "${entity.name}" ( stored in table "${entity.databaseTable}" )
 *
 * @author Telosys Tools Generator
 *
 */

class ${entity.name}Key
{
    private:
    //----------------------------------------------------------------------
    // ENTITY KEY ATTRIBUTES 
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
    $field.formatedType(10).toLowerCase() $field.formatedName(12) #if($field.hasInitialValue())= ${field.initialValue} #end;
#end

	public:
    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    ${entity.name}Key();

    ${entity.name}Key( $fn.argumentsListWithType($entity.keyAttributes) );

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR KEY FIELDS
    //----------------------------------------------------------------------
#foreach( $field in $entity.keyAttributes )
 #if ( $field.setter )	void ${field.setter}( $field.type.toLowerCase() value );
 #end
 #if ( $field.getter )	$field.type.toLowerCase() ${field.getter}();
 #end
#end  

};
